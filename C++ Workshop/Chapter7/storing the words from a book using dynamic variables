// storing the words of a book using dynamic variables
//1. data structure to hold a word containing a buffer containing the word string and a cout of spaces
//.  must be able to output words and spaces
//2. data structure to hold a line of words. It must also be able to output the line
//3. every word can be stored along with the spaces that follow that word. consider a 0 length word for leading spaces
//4. what data struct should be used to hold a word.
//5. what data struct should be used to hold a line.
//6. what data struct should be use to hold a book.
//7. how should a null-terminating string of characters be converted to a list of words?
//8. need a function to produse a string representing the line from the list of words.
//.  DO NOT USE CONTAINER CLASSES OR STD::STRINGS 
//   use provided text below
//. "What a piece of work is man, "
//. "   How noble in reason, how infinite in faculty,"
//. "In form and moving how express and admirable, "
//. "   In action how like an Angel, In apprehension how like a god."
//. "The beauty of the world. The paragon of animals."
#include <memory>
#include <iostream>

std::unique_ptr<char[]> ptr_;

struct word {
    unique_ptr<char[]> ptr_;
    int letters_;
    int spaces_;
    word* next_;
};

struct line {
    word* head_;
    line* next_;
};

struct book {
    line* first_;
};

void parse_line(const char* ln, line* targeted_line) {

}

void Stringify() {
    
}


int main() {
    
}
